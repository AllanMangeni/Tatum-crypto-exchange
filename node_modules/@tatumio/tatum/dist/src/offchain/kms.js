"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.offchainTransferXrpKMS = exports.offchainTransferXlmKMS = exports.offchainTransferEthErc20KMS = exports.offchainTransferEthKMS = exports.offchainTransferBcashKMS = exports.offchainTransferLtcKMS = exports.offchainTransferBtcKMS = void 0;
const tatum_1 = require("../connector/tatum");
const TransferBtcBasedOffchainKMS_1 = require("../model/request/TransferBtcBasedOffchainKMS");
const TransferEthErc20OffchainKMS_1 = require("../model/request/TransferEthErc20OffchainKMS");
const TransferEthOffchainKMS_1 = require("../model/request/TransferEthOffchainKMS");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/BtcTransfer" target="_blank">Tatum API documentation</a>
 */
exports.offchainTransferBtcKMS = async (body) => tatum_1.post(`/v3/offchain/bitcoin/transfer`, body, TransferBtcBasedOffchainKMS_1.TransferBtcBasedOffchainKMS);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/LtcTransfer" target="_blank">Tatum API documentation</a>
 */
exports.offchainTransferLtcKMS = async (body) => tatum_1.post(`/v3/offchain/litecoin/transfer`, body, TransferBtcBasedOffchainKMS_1.TransferBtcBasedOffchainKMS);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/BchTransfer" target="_blank">Tatum API documentation</a>
 */
exports.offchainTransferBcashKMS = async (body) => tatum_1.post(`/v3/offchain/bcash/transfer`, body, TransferBtcBasedOffchainKMS_1.TransferBtcBasedOffchainKMS);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthTransfer" target="_blank">Tatum API documentation</a>
 */
exports.offchainTransferEthKMS = async (body) => tatum_1.post(`/v3/offchain/ethereum/transfer`, body, TransferEthOffchainKMS_1.TransferEthOffchainKMS);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthTransferErc20" target="_blank">Tatum API documentation</a>
 */
exports.offchainTransferEthErc20KMS = async (body) => tatum_1.post(`/v3/offchain/ethereum/erc20/transfer`, body, TransferEthErc20OffchainKMS_1.TransferEthErc20OffchainKMS);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/XlmTransfer" target="_blank">Tatum API documentation</a>
 */
exports.offchainTransferXlmKMS = async (body) => tatum_1.post(`/v3/offchain/xlm/transfer`, body, TransferBtcBasedOffchainKMS_1.TransferBtcBasedOffchainKMS);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/XrpTransfer" target="_blank">Tatum API documentation</a>
 */
exports.offchainTransferXrpKMS = async (body) => tatum_1.post(`/v3/offchain/xrp/transfer`, body, TransferBtcBasedOffchainKMS_1.TransferBtcBasedOffchainKMS);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia21zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL29mZmNoYWluL2ttcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBeUM7QUFDekMsOEZBQXlGO0FBQ3pGLDhGQUF5RjtBQUN6RixvRkFBK0U7QUFHL0U7O0dBRUc7QUFDVSxRQUFBLHNCQUFzQixHQUFHLEtBQUssRUFBRSxJQUFpQyxFQUF3QixFQUFFLENBQ3RHLFlBQUksQ0FBQywrQkFBK0IsRUFBRSxJQUFJLEVBQUUseURBQTJCLENBQUMsQ0FBQztBQUUzRTs7R0FFRztBQUNVLFFBQUEsc0JBQXNCLEdBQUcsS0FBSyxFQUFFLElBQWlDLEVBQXdCLEVBQUUsQ0FDdEcsWUFBSSxDQUFDLGdDQUFnQyxFQUFFLElBQUksRUFBRSx5REFBMkIsQ0FBQyxDQUFDO0FBRTVFOztHQUVHO0FBQ1UsUUFBQSx3QkFBd0IsR0FBRyxLQUFLLEVBQUUsSUFBaUMsRUFBd0IsRUFBRSxDQUN4RyxZQUFJLENBQUMsNkJBQTZCLEVBQUUsSUFBSSxFQUFFLHlEQUEyQixDQUFDLENBQUM7QUFFekU7O0dBRUc7QUFDVSxRQUFBLHNCQUFzQixHQUFHLEtBQUssRUFBRSxJQUE0QixFQUF3QixFQUFFLENBQ2pHLFlBQUksQ0FBQyxnQ0FBZ0MsRUFBRSxJQUFJLEVBQUUsK0NBQXNCLENBQUMsQ0FBQztBQUV2RTs7R0FFRztBQUNVLFFBQUEsMkJBQTJCLEdBQUcsS0FBSyxFQUFFLElBQWlDLEVBQXdCLEVBQUUsQ0FDM0csWUFBSSxDQUFDLHNDQUFzQyxFQUFFLElBQUksRUFBRSx5REFBMkIsQ0FBQyxDQUFDO0FBRWxGOztHQUVHO0FBQ1UsUUFBQSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsSUFBaUMsRUFBd0IsRUFBRSxDQUN0RyxZQUFJLENBQUMsMkJBQTJCLEVBQUUsSUFBSSxFQUFFLHlEQUEyQixDQUFDLENBQUM7QUFFdkU7O0dBRUc7QUFDVSxRQUFBLHNCQUFzQixHQUFHLEtBQUssRUFBRSxJQUFpQyxFQUF3QixFQUFFLENBQ3RHLFlBQUksQ0FBQywyQkFBMkIsRUFBRSxJQUFJLEVBQUUseURBQTJCLENBQUMsQ0FBQyJ9