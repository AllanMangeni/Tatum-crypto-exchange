"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.offchainCompleteWithdrawal = exports.offchainCancelWithdrawal = exports.offchainStoreWithdrawal = exports.offchainBroadcast = exports.getDepositAddressesForAccount = exports.removeDepositAddress = exports.registerTronTrc = exports.storeTrcContractAddress = exports.storeErc20ContractAddress = exports.registerEthereumErc20 = exports.assignDepositAddress = exports.getWithdrawals = exports.checkAddressExists = exports.generateDepositAddresses = exports.generateDepositAddress = void 0;
const tatum_1 = require("../connector/tatum");
const model_1 = require("../model");
const CreateOffchainAddressesBatch_1 = require("../model/request/CreateOffchainAddressesBatch");
const CreateTrcOffchain_1 = require("../model/request/CreateTrcOffchain");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/generateDepositAddress" target="_blank">Tatum API documentation</a>
 */
exports.generateDepositAddress = async (id, index) => {
    const url = `/v3/offchain/account/${id}/address`;
    return tatum_1.post(index === undefined ? url : `${url}?index=${index}`);
};
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/generateDepositAddressesBatch" target="_blank">Tatum API documentation</a>
 */
exports.generateDepositAddresses = async (batch) => tatum_1.post(`/v3/offchain/account/address/batch`, batch, CreateOffchainAddressesBatch_1.AddressBatch);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/addressExists" target="_blank">Tatum API documentation</a>
 */
exports.checkAddressExists = async (address, currency, index) => {
    const url = `/v3/offchain/account/address/${address}/${currency}`;
    return tatum_1.get(index === undefined ? url : `${url}?index=${index}`);
};
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/GetWithdrawals" target="_blank">Tatum API documentation</a>
 */
exports.getWithdrawals = async (status, currency, pageSize = 50, offset = 0) => {
    let url = `/v3/offchain/withdrawal?pageSize=${pageSize}&offset=${offset}`;
    if (status) {
        url += `&status=${status}`;
    }
    if (currency) {
        url += `&currency=${currency}`;
    }
    return tatum_1.get(url);
};
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/assignAddress" target="_blank">Tatum API documentation</a>
 */
exports.assignDepositAddress = async (id, address) => tatum_1.post(`/v3/offchain/account/${id}/address/${address}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/createErc20" target="_blank">Tatum API documentation</a>
 */
exports.registerEthereumErc20 = async (data) => tatum_1.post(`/v3/offchain/ethereum/erc20`, data, model_1.CreateErc20Offchain);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/storeErc20Address" target="_blank">Tatum API documentation</a>
 */
exports.storeErc20ContractAddress = async (name, address) => tatum_1.post(`/v3/offchain/ethereum/erc20/${name}/${address}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/storeTrcAddress" target="_blank">Tatum API documentation</a>
 */
exports.storeTrcContractAddress = async (name, address) => tatum_1.post(`/v3/offchain/tron/trc/${name}/${address}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/createTrc" target="_blank">Tatum API documentation</a>
 */
exports.registerTronTrc = async (data) => tatum_1.post(`/v3/offchain/tron/trc`, data, CreateTrcOffchain_1.CreateTrcOffchain);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/removeAddress" target="_blank">Tatum API documentation</a>
 */
exports.removeDepositAddress = async (id, address) => tatum_1.httpDelete(`/v3/offchain/account/${id}/address/${address}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getAllDepositAddresses" target="_blank">Tatum API documentation</a>
 */
exports.getDepositAddressesForAccount = async (id) => tatum_1.get(`/v3/offchain/account/${id}/address`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/broadcastBlockchainTransaction" target="_blank">Tatum API documentation</a>
 */
exports.offchainBroadcast = async (data) => tatum_1.post(`/v3/offchain/withdrawal/broadcast`, data, model_1.BroadcastWithdrawal);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/storeWithdrawal" target="_blank">Tatum API documentation</a>
 */
exports.offchainStoreWithdrawal = async (data) => tatum_1.post(`/v3/offchain/withdrawal`, data);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/cancelInProgressWithdrawal" target="_blank">Tatum API documentation</a>
 */
exports.offchainCancelWithdrawal = async (id, revert = true) => tatum_1.httpDelete(`/v3/offchain/withdrawal/${id}?revert=${revert}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/completeWithdrawal" target="_blank">Tatum API documentation</a>
 */
exports.offchainCompleteWithdrawal = async (id, txId) => tatum_1.put(`/v3/offchain/withdrawal/${id}/${txId}`);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL29mZmNoYWluL2NvbW1vbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBK0Q7QUFDL0Qsb0NBUWtCO0FBQ2xCLGdHQUEyRTtBQUMzRSwwRUFBcUU7QUFFckU7O0dBRUc7QUFDVSxRQUFBLHNCQUFzQixHQUFHLEtBQUssRUFBRSxFQUFVLEVBQUUsS0FBYyxFQUFvQixFQUFFO0lBQ3pGLE1BQU0sR0FBRyxHQUFHLHdCQUF3QixFQUFFLFVBQVUsQ0FBQztJQUNqRCxPQUFPLFlBQUksQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxVQUFVLEtBQUssRUFBRSxDQUFDLENBQUE7QUFDcEUsQ0FBQyxDQUFDO0FBRUY7O0dBRUc7QUFDVSxRQUFBLHdCQUF3QixHQUFHLEtBQUssRUFBRSxLQUFtQixFQUFzQixFQUFFLENBQUMsWUFBSSxDQUFDLG9DQUFvQyxFQUFFLEtBQUssRUFBRSwyQ0FBWSxDQUFDLENBQUM7QUFFM0o7O0dBRUc7QUFDVSxRQUFBLGtCQUFrQixHQUFHLEtBQUssRUFBRSxPQUFlLEVBQUUsUUFBZ0IsRUFBRSxLQUFjLEVBQW9CLEVBQUU7SUFDNUcsTUFBTSxHQUFHLEdBQUcsZ0NBQWdDLE9BQU8sSUFBSSxRQUFRLEVBQUUsQ0FBQztJQUNsRSxPQUFPLFdBQUcsQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxVQUFVLEtBQUssRUFBRSxDQUFDLENBQUE7QUFDbkUsQ0FBQyxDQUFDO0FBRUY7O0dBRUc7QUFDVSxRQUFBLGNBQWMsR0FBRyxLQUFLLEVBQUUsTUFBZSxFQUFFLFFBQWlCLEVBQUUsUUFBUSxHQUFHLEVBQUUsRUFBRSxNQUFNLEdBQUcsQ0FBQyxFQUF5QixFQUFFO0lBQ3pILElBQUksR0FBRyxH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