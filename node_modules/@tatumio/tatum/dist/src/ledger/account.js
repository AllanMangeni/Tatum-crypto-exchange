"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAccountBalance = exports.getAllAccounts = exports.getAccountsByCustomerId = exports.unfreezeAccount = exports.freezeAccount = exports.deactivateAccount = exports.activateAccount = exports.deleteBlockedAmountForAccount = exports.deleteBlockedAmountWithTransaction = exports.deleteBlockedAmount = exports.blockAmount = exports.getBlockedAmountsByAccountId = exports.createAccounts = exports.updateAccount = exports.createAccount = exports.getAccountById = void 0;
const tatum_1 = require("../connector/tatum");
const model_1 = require("../model");
const BlockageTransaction_1 = require("../model/request/BlockageTransaction");
const CreateAccountsBatch_1 = require("../model/request/CreateAccountsBatch");
const UpdateAccount_1 = require("../model/request/UpdateAccount");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getAccountByAccountId" target="_blank">Tatum API documentation</a>
 */
exports.getAccountById = async (id) => tatum_1.get(`/v3/ledger/account/${id}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/createAccount" target="_blank">Tatum API documentation</a>
 */
exports.createAccount = async (account) => tatum_1.post('/v3/ledger/account', account, model_1.CreateAccount);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/updateAccountByAccountId" target="_blank">Tatum API documentation</a>
 */
exports.updateAccount = async (id, account) => tatum_1.put(`/v3/ledger/account/${id}`, account, UpdateAccount_1.UpdateAccount);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/createAccountBatch" target="_blank">Tatum API documentation</a>
 */
exports.createAccounts = async (accounts) => tatum_1.post('/v3/ledger/account/batch', accounts, CreateAccountsBatch_1.CreateAccountsBatch);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getBlockAmount" target="_blank">Tatum API documentation</a>
 */
exports.getBlockedAmountsByAccountId = async (id, pageSize = 50, offset = 0) => tatum_1.get(`/v3/ledger/account/block/${id}?pageSize=${pageSize}&offset=${offset}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/blockAmount" target="_blank">Tatum API documentation</a>
 */
exports.blockAmount = async (id, block) => tatum_1.post(`/v3/ledger/account/block/${id}`, block, model_1.BlockAmount);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/deleteBlockAmount" target="_blank">Tatum API documentation</a>
 */
exports.deleteBlockedAmount = async (id) => tatum_1.httpDelete(`/v3/ledger/account/block/${id}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/unblockAmountWithTransaction" target="_blank">Tatum API documentation</a>
 */
exports.deleteBlockedAmountWithTransaction = async (id, txData) => tatum_1.put(`/v3/ledger/account/block/${id}`, txData, BlockageTransaction_1.BlockageTransaction);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/deleteAllBlockAmount" target="_blank">Tatum API documentation</a>
 */
exports.deleteBlockedAmountForAccount = async (id) => tatum_1.httpDelete(`/v3/ledger/account/block/account/${id}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/activateAccount" target="_blank">Tatum API documentation</a>
 */
exports.activateAccount = async (id) => tatum_1.put(`v3/ledger/account/${id}/activate`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/deactivateAccount" target="_blank">Tatum API documentation</a>
 */
exports.deactivateAccount = async (id) => tatum_1.put(`/v3/ledger/account/${id}/deactivate`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/freezeAccount" target="_blank">Tatum API documentation</a>
 */
exports.freezeAccount = async (id) => tatum_1.put(`/v3/ledger/account/${id}/freeze`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/unfreezeAccount" target="_blank">Tatum API documentation</a>
 */
exports.unfreezeAccount = async (id) => tatum_1.put(`/v3/ledger/account/${id}/unfreeze`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getAccountsByCustomerId" target="_blank">Tatum API documentation</a>
 */
exports.getAccountsByCustomerId = async (id, pageSize = 50, offset = 0) => tatum_1.get(`/v3/ledger/account/customer/${id}?pageSize=${pageSize}&offset=${offset}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getAllAccounts" target="_blank">Tatum API documentation</a>
 */
exports.getAllAccounts = async (pageSize = 50, offset = 0) => tatum_1.get(`/v3/ledger/account?pageSize=${pageSize}&offset=${offset}`);
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getAccountBalance" target="_blank">Tatum API documentation</a>
 */
exports.getAccountBalance = async (id) => tatum_1.get(`/v3/ledger/account/${id}/balance`);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sZWRnZXIvYWNjb3VudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBK0Q7QUFDL0Qsb0NBQXVGO0FBQ3ZGLDhFQUF5RTtBQUN6RSw4RUFBeUU7QUFDekUsa0VBQTZEO0FBRTdEOztHQUVHO0FBQ1UsUUFBQSxjQUFjLEdBQUcsS0FBSyxFQUFFLEVBQVUsRUFBb0IsRUFBRSxDQUFDLFdBQUcsQ0FBQyxzQkFBc0IsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUV0Rzs7R0FFRztBQUNVLFFBQUEsYUFBYSxHQUFHLEtBQUssRUFBRSxPQUFzQixFQUFvQixFQUFFLENBQUMsWUFBSSxDQUFDLG9CQUFvQixFQUFFLE9BQU8sRUFBRSxxQkFBYSxDQUFDLENBQUM7QUFFcEk7O0dBRUc7QUFDVSxRQUFBLGFBQWEsR0FBRyxLQUFLLEVBQUUsRUFBVSxFQUFFLE9BQXNCLEVBQW9CLEVBQUUsQ0FBQyxXQUFHLENBQUMsc0JBQXNCLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSw2QkFBYSxDQUFDLENBQUM7QUFFcko7O0dBRUc7QUFDVSxRQUFBLGNBQWMsR0FBRyxLQUFLLEVBQUUsUUFBNkIsRUFBc0IsRUFBRSxDQUFDLFlBQUksQ0FBQywwQkFBMEIsRUFBRSxRQUFRLEVBQUUseUNBQW1CLENBQUMsQ0FBQztBQUUzSjs7R0FFRztBQUNVLFFBQUEsNEJBQTRCLEdBQUcsS0FBSyxFQUFFLEVBQVUsRUFBRSxXQUFtQixFQUFFLEVBQUUsTUFBTSxHQUFHLENBQUMsRUFBdUIsRUFBRSxDQUFDLFdBQUcsQ0FBQyw0QkFBNEIsRUFBRSxhQUFhLFFBQVEsV0FBVyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBRXRNOztHQUVHO0FBQ1UsUUFBQSxXQUFXLEdBQUcsS0FBSyxFQUFFLEVBQVUsRUFBRSxLQUFrQixFQUEyQixFQUFFLENBQUMsWUFBSSxDQUFDLDRCQUE0QixFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsbUJBQVcsQ0FBQyxDQUFDO0FBRXpKOztHQUVHO0FBQ1UsUUFBQSxtQkFBbUIsR0FBRyxLQUFLLEVBQUUsRUFBVSxFQUFpQixFQUFFLENBQUMsa0JBQVUsQ0FBQyw0QkFBNEIsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUVySDs7R0FFRztBQUNVLFFBQUEsa0NBQWtDLEdBQUcsS0FBSyxFQUFFLEVBQVUsRUFBRSxNQUEyQixFQUFrQyxFQUFFLENBQ2xJLFdBQUcsQ0FBQyw0QkFBNEIsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLHlDQUFtQixDQUFDLENBQUM7QUFFckU7O0dBRUc7QUFDVSxRQUFBLDZCQUE2QixHQUFHLEtBQUssRUFBRSxFQUFVLEVBQWlCLEVBQUUsQ0FBQyxrQkFBVSxDQUFDLG9DQUFvQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBRXZJOztHQUVHO0FBQ1UsUUFBQSxlQUFlLEdBQUcsS0FBSyxFQUFFLEVBQVUsRUFBaUIsRUFBRSxDQUFDLFdBQUcsQ0FBQyxxQkFBcUIsRUFBRSxXQUFXLENBQUMsQ0FBQztBQUU1Rzs7R0FFRztBQUNVLFFBQUEsaUJBQWlCLEdBQUcsS0FBSyxFQUFFLEVBQVUsRUFBaUIsRUFBRSxDQUFDLFdBQUcsQ0FBQyxzQkFBc0IsRUFBRSxhQUFhLENBQUMsQ0FBQztBQUVqSDs7R0FFRztBQUNVLFFBQUEsYUFBYSxHQUFHLEtBQUssRUFBRSxFQUFVLEVBQWlCLEVBQUUsQ0FBQyxXQUFHLENBQUMsc0JBQXNCLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFFekc7O0dBRUc7QUFDVSxRQUFBLGVBQWUsR0FBRyxLQUFLLEVBQUUsRUFBVSxFQUFpQixFQUFFLENBQUMsV0FBRyxDQUFDLHNCQUFzQixFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBRTdHOztHQUVHO0FBQ1UsUUFBQSx1QkFBdUIsR0FBRyxLQUFLLEVBQUUsRUFBVSxFQUFFLFdBQW1CLEVBQUUsRUFBRSxNQUFNLEdBQUcsQ0FBQyxFQUFzQixFQUFFLENBQUMsV0FBRyxDQUFDLCtCQUErQixFQUFFLGFBQWEsUUFBUSxXQUFXLE1BQU0sRUFBRSxDQUFDLENBQUM7QUFFbk07O0dBRUc7QUFDVSxRQUFBLGNBQWMsR0FBRyxLQUFLLEVBQUUsV0FBbUIsRUFBRSxFQUFFLE1BQU0sR0FBRyxDQUFDLEVBQXNCLEVBQUUsQ0FBQyxXQUFHLENBQUMsK0JBQStCLFFBQVEsV0FBVyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBRS9KOztHQUVHO0FBQ1UsUUFBQSxpQkFBaUIsR0FBRyxLQUFLLEVBQUUsRUFBVSxFQUEyQixFQUFFLENBQUMsV0FBRyxDQUFDLHNCQUFzQixFQUFFLFVBQVUsQ0FBQyxDQUFDIn0=